import e,{useRef as t,useContext as r,useEffect as s}from"react";const o=e.createContext();o.displayName="ClientContext";var n=function(e){return"undefined"!=typeof File&&e instanceof File||"undefined"!=typeof Blob&&e instanceof Blob||e instanceof class{constructor({uri:e,name:t,type:r}){this.uri=e,this.name=t,this.type=r}}};const i=e=>n(e)||null!==e&&"object"==typeof e&&"function"==typeof e.pipe;class a{constructor(e={}){if(!e.url)throw Error("GraphQLClient: config.url is required");if(e.fetch&&"function"!=typeof e.fetch)throw Error("GraphQLClient: config.fetch must be a function");if(("undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement||e.ssrMode)&&!e.fetch&&!fetch)throw Error("GraphQLClient: fetch must be polyfilled or passed in new GraphQLClient({ fetch })");if(e.ssrMode&&!e.cache)throw Error("GraphQLClient: config.cache is required when in ssrMode");this.cache=e.cache,this.headers=e.headers||{},this.ssrMode=e.ssrMode,this.ssrPromises=[],this.url=e.url,this.fetch=e.fetch||"undefined"!=typeof fetch&&fetch&&fetch.bind(),this.fetchOptions=e.fetchOptions||{},this.FormData=e.FormData||("undefined"!=typeof FormData?FormData:void 0),this.logErrors=void 0===e.logErrors||e.logErrors,this.onError=e.onError,this.useGETForQueries=!0===e.useGETForQueries,this.subscriptionClient=e.subscriptionClient}setHeader(e,t){return this.headers[e]=t,this}setHeaders(e){return this.headers=e,this}removeHeader(e){return delete this.headers[e],this}logErrorResult({result:e,operation:t}){console.error("GraphQL Hooks Error"),console.groupCollapsed("---\x3e Full Error Details"),console.groupCollapsed("Operation:"),console.log(t),console.groupEnd();const r=e.error;r&&(r.fetchError&&(console.groupCollapsed("FETCH ERROR:"),console.log(r.fetchError),console.groupEnd()),r.httpError&&(console.groupCollapsed("HTTP ERROR:"),console.log(r.httpError),console.groupEnd()),r.graphQLErrors&&r.graphQLErrors.length>0&&(console.groupCollapsed("GRAPHQL ERROR:"),r.graphQLErrors.forEach((e=>console.log(e))),console.groupEnd())),console.groupEnd()}generateResult({fetchError:e,httpError:t,graphQLErrors:r,data:s}){return!!(r&&r.length>0||e||t)?{data:s,error:{fetchError:e,httpError:t,graphQLErrors:r}}:{data:s}}getCacheKey(e,t={}){return{operation:e,fetchOptions:{...this.fetchOptions,...t.fetchOptionsOverrides}}}getCache(e){const t=this.cache?this.cache.get(e):null;if(t)return t}saveCache(e,t){this.cache&&this.cache.set(e,t)}getFetchOptions(e,t={}){const r={method:"POST",headers:{...this.headers},...this.fetchOptions,...t};if("GET"===r.method)return r;const{clone:s,files:o}=function(e,t="",r=n){const s=new Map,o=new Map;return{clone:function e(t,n,i){let a=t;if(r(t)){a=null;const e=s.get(t);e?e.push(n):s.set(t,[n])}else{const r=Array.isArray(t)||"undefined"!=typeof FileList&&t instanceof FileList,s=t&&t.constructor===Object;if(r||s){const s=o.has(t);if(s?a=o.get(t):(a=r?[]:{},o.set(t,a)),!i.has(t)){const o=n?n+".":"",c=new Set(i).add(t);if(r){let r=0;for(const n of t){const t=e(n,o+r++,c);s||a.push(t)}}else for(const r in t){const n=e(t[r],o+r,c);s||(a[r]=n)}}}}return a}(e,t,new Set),files:s}}(e,"",i),a=JSON.stringify(s);if(o.size){if(!this.FormData)throw Error("GraphQLClient: FormData must be polyfilled or passed in new GraphQLClient({ FormData })");const e=new this.FormData;e.append("operations",a);const t={};let s=0;o.forEach((e=>{t[++s]=e})),e.append("map",JSON.stringify(t)),s=0,o.forEach(((t,r)=>{e.append(""+ ++s,r,r.name)})),r.body=e}else r.headers["Content-Type"]="application/json",r.body=a;return r}request(e,t={}){let r=this.url;if("GET"===this.getFetchOptions(e,t.fetchOptionsOverrides).method){r=r+"?"+Object.entries(e).filter((([,e])=>!!e)).map((([e,t])=>("variables"===e&&(t=JSON.stringify(t)),`${e}=${encodeURIComponent(t)}`))).join("&")}return this.fetch(r,this.getFetchOptions(e,t.fetchOptionsOverrides)).then((e=>e.ok?e.json().then((({errors:e,data:t})=>this.generateResult({graphQLErrors:e,data:t}))):e.text().then((t=>{const{status:r,statusText:s}=e;return this.generateResult({httpError:{status:r,statusText:s,body:t}})})))).catch((e=>this.generateResult({fetchError:e}))).then((t=>(t.error&&(this.logErrors&&this.logErrorResult({result:t,operation:e}),this.onError&&this.onError({result:t,operation:e})),t)))}createSubscription(e){if(!this.subscriptionClient)throw Error("No SubscriptionClient! Please set in the constructor.");return"function"==typeof this.subscriptionClient.subscribe?{subscribe:t=>({unsubscribe:this.subscriptionClient.subscribe(e,t)})}:this.subscriptionClient.request(e)}}var c=Object.prototype.hasOwnProperty;function u(e,t,r){for(r of e.keys())if(h(r,t))return r}function h(e,t){var r,s,o;if(e===t)return!0;if(e&&t&&(r=e.constructor)===t.constructor){if(r===Date)return e.getTime()===t.getTime();if(r===RegExp)return""+e==""+t;if(r===Array){if((s=e.length)===t.length)for(;s--&&h(e[s],t[s]););return-1===s}if(r===Set){if(e.size!==t.size)return!1;for(s of e){if((o=s)&&"object"==typeof o&&!(o=u(t,o)))return!1;if(!t.has(o))return!1}return!0}if(r===Map){if(e.size!==t.size)return!1;for(s of e){if((o=s[0])&&"object"==typeof o&&!(o=u(t,o)))return!1;if(!h(s[1],t.get(o)))return!1}return!0}if(r===ArrayBuffer)e=new Uint8Array(e),t=new Uint8Array(t);else if(r===DataView){if((s=e.byteLength)===t.byteLength)for(;s--&&e.getInt8(s)===t.getInt8(s););return-1===s}if(ArrayBuffer.isView(e)){if((s=e.byteLength)===t.byteLength)for(;s--&&e[s]===t[s];);return-1===s}if(!r||"object"==typeof e){for(r in s=0,e){if(c.call(e,r)&&++s&&!c.call(t,r))return!1;if(!(r in t)||!h(e[r],t[r]))return!1}return Object.keys(t).length===s}}return e!=e&&t!=t}const f="RESET_STATE",l="LOADING",p="CACHE_HIT",d="REQUEST_RESULT";function g(e,t){switch(t.type){case f:return t.initialState;case l:return e.error?{...t.initialState,data:e.data,loading:!0}:e.loading?e:{...e,loading:!0};case p:return e.cacheHit&&!t.resetState?e:{...t.result,cacheHit:!0,loading:!1};case d:return{...t.result,data:e.data&&t.result.data&&t.updateData?t.updateData(e.data,t.result.data):t.result.data,cacheHit:!1,loading:!1};default:return e}}function E(t,r={}){if("string"!=typeof t)throw Error("Your query must be a string. If you are using the `gql` template literal from graphql-tag, remove it from your query.");const s=e.useContext(o),n=r.client||s,i=e.useRef(!0),a=e.useRef(null),c={query:t,variables:r.variables,operationName:r.operationName,persisted:r.persisted};(r.persisted||n.useGETForQueries&&!r.isMutation)&&(r.fetchOptionsOverrides={...r.fetchOptionsOverrides,method:"GET"});const u=n.getCacheKey(c,r),E=r.isMutation||r.isManual,y=r.skipCache||!n.cache?null:n.cache.get(u),b={...y,cacheHit:!!y,loading:!E&&!y},[C,m]=e.useReducer(g,b),O=JSON.stringify(u);e.useEffect((()=>{r.updateData||m({type:f,initialState:b})}),[O]),e.useEffect((()=>(i.current=!0,()=>{i.current=!1})),[]);const w=function(t,r){const s=e.useRef();return h(r,s.current)||(s.current=r),e.useCallback(t,s.current)}((e=>{if(!i.current)return Promise.resolve();const t={...r,...e},s={...c,variables:t.variables,operationName:t.operationName},o=n.getCacheKey(s,t);a.current=o;const u=t.skipCache?null:n.getCache(o);return u?(m({type:p,result:u,resetState:O!==JSON.stringify(C.cacheKey)}),Promise.resolve(u)):(m({type:l,initialState:b}),n.request(s,t).then((e=>{if(t.updateData&&"function"!=typeof t.updateData)throw Error("options.updateData must be a function");const r={...e};if(t.useCache&&(r.useCache=!0,r.cacheKey=o,n.ssrMode)){const e={error:r.error,data:t.updateData?t.updateData(C.data,r.data):r.data};n.saveCache(o,e)}return i.current&&o===a.current&&m({type:d,updateData:t.updateData,result:r}),e})))}),[n,r,c]);e.useEffect((()=>{C.useCache&&n.saveCache(C.cacheKey,C)}),[n,C]);return[w,C,(e={})=>m({type:f,initialState:{...b,...e}})]}const y={useCache:!0,skip:!1,throwErrors:!1};function b(t,r={}){const s={...y,...r},n=e.useContext(o),i=r.client||n,[a,c]=e.useState(!1),[u,h]=E(t,s);if(i.ssrMode&&!1!==r.ssr&&!a&&!r.skipCache&&!r.skip){if(!h.data&&!h.error){const e=u();i.ssrPromises.push(e)}c(!0)}const f=JSON.stringify(s);return e.useEffect((()=>{s.skip||u()}),[t,f]),e.useEffect((()=>{if(h.error&&s.throwErrors)throw h.error}),[h.error,s.throwErrors]),{...h,refetch:e.useCallback(((e={})=>u({skipCache:!0,updateData:(e,t)=>t,...e})),[u])}}function C(e,n){const i=t(n);i.current=n;const a=r(o),c=e.client||a,u={query:e.query,variables:e.variables};s((()=>{const e=c.createSubscription(u).subscribe({next:e=>{i.current(e)},error:()=>{e.unsubscribe()},complete:()=>{e.unsubscribe()}});return()=>{e.unsubscribe()}}),[])}const m=(e,t)=>E(e,{useCache:!0,isManual:!0,...t}),O=(e,t)=>E(e,{isMutation:!0,...t});export{o as ClientContext,a as GraphQLClient,E as useClientRequest,m as useManualQuery,O as useMutation,b as useQuery,C as useSubscription};
